row =2
col =4
row=(row/3)*3
col=(col/4)*4
print(row,col)
import numpy as np
import Queue as Q
q = Q.PriorityQueue()
q.put((1))


a = [(3,4),(5,6),(4,3)]
b = a[np.random.randrange(len(a))]
print(b)


'''
12,3,4;
-,-,4,-,-,-,12,-,-,9,3,-;
9,8,-,-,-,7,-,-,6,-,10,-;
2,-,6,-,9,-,-,8,-,4,-,11;
-,9,-,-,1,-,-,7,-,-,-,-;
-,-,12,7,-,-,6,-,2,3,-,-;
1,-,-,-,8,12,5,-,-,4,-,-;
-,6,-,-,-,5,10,1,-,-,-,3;
-,-,9,5,-,11,-,-,7,10,-,-;
-,-,-,-,4,-,-,12,-,-,6,-;
7,-,11,-,12,-,-,5,-,8,-,6;
-,1,-,2,-,-,11,-,-,-,9,5;
-,10,5,-,-,8,-,-,-,1,-,-;
'''

'''
4,2,2;
-,1,3,-;
2,-,-,-;
-,-,-,3;
-,2,1,-;
'''

'''
12,3,4;
-,11,-,-,-,-,-,-,-,4,-,-;
7,-,-,2,6,-,-,3,5,-,11,-;
-,6,9,-,1,12,-,-,7,-,10,-;
-,4,1,-,-,-,-,10,8,-,6,-;
-,8,-,9,-,-,-,12,10,-,-,-;
2,-,-,-,11,-,1,-,-,9,-,-;
-,-,8,-,-,2,-,4,-,-,-,7;
-,-,-,3,5,-,-,-,12,-,4,-;
-,7,-,4,12,-,-,-,-,6,8,-;
-,5,-,8,-,-,10,7,-,11,1,-;
-,1,-,11,3,-,-,5,2,-,-,6;
-,-,3,-,-,-,-,-,-,-,12,-;
'''

'''
9,3,3;
8,-,-,-,-,5,-,-,-;
-,-,2,4,-,1,3,-,-;
-,-,-,-,9,-,8,7,-;
-,2,-,-,-,-,1,9,-;
-,-,9,-,-,-,7,-,-;
-,1,8,-,-,-,-,2,-;
-,6,3,-,2,-,-,-,-;
-,-,7,8,-,6,2,-,-;
-,-,-,5,-,-,-,-,4;
'''

'''
16,4,4;
-,-,7,14,1,8,-,-,4,2,9,6,13,-,5,-;
1,-,-,-,-,13,-,-,11,7,0,-,-,-,-,-;
-,-,9,-,-,-,-,-,16,-,13,14,-,-,-,-;
-,-,3,-,-,-,-,-,-,8,15,-,6,-,-,14;
-,-,-,-,11,2,-,-,-,-,-,-,-,8,-,-;
'''

'''
16,4,4;
-,-,3,-,-,-,-,-,9,-,-,-,-,-,-,-;
-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-;
-,-,-,-,-,-,-,-,-,2,-,-,-,10,-,-;
-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-;
3,-,-,-,-,-,-,-,11,-,-,-,-,-,-,-;
-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-;
-,5,8,-,-,-,-,-,-,-,-,-,-,-,-,10;
-,-,-,-,-,-,-,-,-,-,-,-,3,1,4,-;
-,4,-,-,-,-,-,-,-,-,-,-,-,-,-,-;
-,-,9,-,-,-,-,-,-,-,-,-,6,-,-,-;
-,-,-,7,-,-,-,-,-,-,-,-,-,-,-,-;
-,-,-,14,-,-,-,-,-,-,-,-,-,-,-,-;
-,-,-,-,-,-,-,5,-,-,-,-,16,-,-,-;
-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-;
-,-,6,-,-,-,-,-,-,-,2,-,-,11,-,-;
-,-,-,15,-,-,-,-,-,-,6,-,-,-,-,-;
'''

'''
[8, 8, 1, 9, 1, 5, 4, 5, 5],
[9, 7, 2, 4, 5, 1, 3, 6, 7],
[2, 4, 6, 2, 9, 8, 8, 7, 6],
[5, 2, 4, 3, 4, 4, 1, 9, 9],
[7, 9, 9, 1, 8, 7, 7, 8, 3],
[4, 1, 8, 6, 7, 3, 9, 2, 8],
[3, 6, 3, 7, 2, 9, 6, 4, 2],
[1, 3, 7, 8, 3, 6, 2, 1, 1],
[6, 5, 5, 5, 6, 2, 5, 3, 4],
'''
